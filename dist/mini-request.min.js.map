{"version":3,"file":"mini-request.min.js","sources":["../src/cancel/Cancel.ts","../src/cancel/CancelToken.ts","../src/helpers/utils.ts","../src/cancel/isCancel.ts","../src/adapters/wx/weappRequest.ts","../src/adapters/wx/configAdapter.ts","../src/helpers/normalizeHeaderName.ts","../src/defaults.ts","../src/adapters/index.ts","../src/helpers/setContentTypeIfUnset.ts","../src/error/isNetworkError.ts","../src/error/isTimeout.ts","../src/helpers/combineURLs.ts","../src/helpers/isAbsoluteURL.ts","../src/helpers/transformUrl.ts","../src/core/InterceptorManager.ts","../src/core/mergeConfig.ts","../src/helpers/assembleHeaders.ts","../src/adapters/wx/storageCookies.ts","../src/core/transformConfig.ts","../src/helpers/copyConfig.ts","../src/core/transformData.ts","../src/helpers/parseCookie.ts","../src/core/AppletsRequestError.ts","../src/adapters/Adapter.ts","../src/core/request.ts","../src/helpers/transformMethod.ts","../src/cookie/getCookies.ts","../src/cookie/writeCookies.ts","../src/core/AppletsRequest.ts","../src/appletsRequest.ts"],"sourcesContent":["export default class Cancel {\n  message = \"\";\n\n  isCancel = true;\n\n  constructor(message: string) {\n    this.message = message;\n  }\n\n  toString(): string {\n    return `Cancel: ${this.message || \"\"}`;\n  }\n}\n","import Cancel from \"./Cancel\";\n\ninterface ISourceReturn {\n  token: CancelToken;\n  cancel: CancelToken[\"cancel\"];\n}\n\nexport default class CancelToken {\n  private reason: Cancel | undefined;\n\n  private promise: Promise<string>;\n\n  private promiseResolve: IAppletsRequest.IResolved<any> = (): any => {\n    // empty\n  };\n\n  static source(): ISourceReturn {\n    let cancel = (): void => {\n      // empty\n    };\n    const token = new CancelToken((cancelFn) => {\n      cancel = cancelFn;\n    });\n    return {\n      token,\n      cancel,\n    };\n  }\n\n  constructor(executor?: IAppletsRequest.IEmptyFN) {\n    this.promise = new Promise((resolve) => {\n      this.promiseResolve = resolve;\n    });\n\n    if (typeof executor === \"function\") {\n      executor(this.cancel.bind(this));\n    }\n  }\n\n  cancel(message: string): void {\n    if (this.reason) {\n      return;\n    }\n    this.reason = new Cancel(message);\n    this.promiseResolve(this.reason);\n  }\n\n  execAbort(resolution: IAppletsRequest.IResolved<any>): any {\n    return this.promise.then(resolution);\n  }\n\n  throwIfRequested(): void {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n}\n","function getDataType(val: any): string {\n  return Object.prototype.toString.call(val);\n}\n\nexport function isDate(val: any): val is Date {\n  return getDataType(val) === \"[object Date]\";\n}\n\nexport function isObject(val: any): val is Record<string, any> {\n  return val !== null && typeof val === \"object\";\n}\n\nexport function isPlainObject(val: any): val is Record<string, any> {\n  if (val === null || getDataType(val) !== \"[object Object]\") {\n    return false;\n  }\n  const prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\nexport function assign<T, U>(to: T, from: U): T & U {\n  if (isString(from)) {\n    return to as T & U;\n  }\n\n  for (const key in from) {\n    (to as T & U)[key] = from[key] as any;\n  }\n\n  return to as T & U;\n}\n\nexport function isUndefined(val: any): boolean {\n  return typeof val === \"undefined\";\n}\n\n/**\n * 遍历\n * @param {Object|Array} obj\n * @param fn\n */\nexport function forEach(obj: any, fn: IAppletsRequest.IEmptyFN): void {\n  if (typeof obj === \"undefined\" || obj === null) {\n    return;\n  }\n\n  let arr = obj;\n\n  // 如果obj是非object类型，例如：number，string等\n  if (typeof obj !== \"object\") {\n    arr = [obj];\n  }\n\n  if (Array.isArray(arr)) {\n    arr.forEach((item, i) => {\n      fn.call(null, item, i, obj);\n    });\n    return;\n  }\n  Object.keys(arr).forEach((key) => {\n    fn.call(null, arr[key], key, arr);\n  });\n}\n\nexport function merge(\n  ...objs: Record<string, any>[]\n): any[] | Record<string, any> {\n  if (objs.length === 0) {\n    return Object.create(null);\n  }\n\n  let result: any = Object.create(null);\n  function assignValue(val: any, key: string | number): void {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (Array.isArray(val)) {\n      result[key] = merge(val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  if (Array.isArray(objs[0])) {\n    result = [];\n  } else {\n    result = Object.create(null);\n  }\n\n  objs.forEach((obj) => {\n    forEach(obj, assignValue);\n  });\n\n  return result;\n}\n\nexport function isNumber(val: any): boolean {\n  return typeof val === \"number\";\n}\n\nexport function isString(val: any): boolean {\n  return typeof val === \"string\";\n}\n\nexport function isFunction(val: any): boolean {\n  return typeof val === \"function\";\n}\n","import { isUndefined } from \"../helpers/utils\";\n\nexport default function isCancel(canceler: any): boolean {\n  if (isUndefined(canceler)) {\n    return false;\n  }\n  return canceler && canceler.isCancel;\n}\n","/*\n * @Author: youzhao.zhou\n * @Date: 2021-02-04 16:09:10\n * @Last Modified by: youzhao.zhou\n * @Last Modified time: 2021-02-09 17:27:51\n * @Description request adapter\n *\n * 1. 执行成功需要返回IAppletsRequestResponse，执行失败即为reject返回IAppletsRequestAdapterError\n * 2. 如果取消返回IAppletsRequest.ICanceler\n */\n\nimport { isUndefined, merge } from \"../../helpers/utils\";\nimport configAdapter from \"./configAdapter\";\n\ninterface IResolveOptions {\n  headers: Record<string, any>;\n  status: number;\n  data: any;\n  response?: any;\n}\n\nexport default function weappRequest(\n  config: IAppletsRequest.IHttpConfig\n): IAppletsRequestPromise {\n  function requestSuccess(res: any): IResolveOptions {\n    if (isUndefined(res) || res === null) {\n      return {\n        headers: {},\n        status: 200,\n        data: {},\n        response: res,\n      };\n    }\n\n    return {\n      headers: res.header,\n      status: res.statusCode,\n      data: dataParser(res.data),\n      response: res,\n    };\n  }\n\n  /**\n   * 获取错误类型\n   * @param err\n   * @param timeout\n   * @returns NETWORK_ERROR | TIMEOUT\n   * @example {\n   *    msg: `Timeout of 2000 ms exceeded`,\n   *    type: \"TIMEOUT\",\n   *  }\n   */\n  function failType(\n    err: any,\n    timeout: number | undefined\n  ): { msg: string; type: \"NETWORK_ERROR\" | \"TIMEOUT\" } {\n    if (\n      err &&\n      (err.errMsg || \"\").toString().toLowerCase().includes(\"timeout\")\n    ) {\n      return {\n        msg: `Timeout of ${timeout || \"\"} ms exceeded`,\n        type: \"TIMEOUT\",\n      };\n    }\n    return {\n      msg: `Network Error`,\n      type: \"NETWORK_ERROR\",\n    };\n  }\n\n  /**\n   * JSON parse data\n   * @param data\n   */\n  function dataParser(data: any): any {\n    if (typeof data !== \"string\") {\n      return data;\n    }\n    try {\n      return JSON.parse(data);\n    } catch (e) {\n      return data;\n    }\n  }\n\n  function getReqConfig(\n    originalConfig: IAppletsRequestWx.RequestOption\n  ): IAppletsRequest.IHttpConfig {\n    const tmpConfig: any = merge({}, originalConfig);\n    tmpConfig.headers = originalConfig.header;\n    delete tmpConfig.header;\n    delete tmpConfig.Adapter;\n    return tmpConfig;\n  }\n\n  return new Promise((resolve, reject) => {\n    const Adapter = config.Adapter;\n    const reqConfig = configAdapter(config);\n    const adapterConfig = getReqConfig(reqConfig);\n\n    if (!Adapter) {\n      throw new TypeError(\"Adapter is undefined or null\");\n    }\n\n    const adapter = new Adapter(adapterConfig);\n\n    let request = wx.request({\n      ...reqConfig,\n      success(res: any) {\n        adapter.resolve(requestSuccess(res), resolve);\n      },\n      fail(err: any) {\n        const errData = failType(err, reqConfig.timeout);\n        const rejectData = {\n          errMsg: errData.msg,\n          status: errData.type,\n          extra: err,\n        };\n\n        adapter.reject(rejectData, reject);\n      },\n      complete() {\n        request = null;\n      },\n    });\n\n    adapter.cancel((reason) => {\n      reject(reason);\n      request.abort();\n      request = null;\n    });\n\n    if (typeof config.getRequestTask === \"function\") {\n      config.getRequestTask(request);\n    }\n  });\n}\n","export default function configAdapter(\n  config: IAppletsRequest.IHttpConfig\n): IAppletsRequestWx.RequestOption {\n  const reqConfig: IAppletsRequestWx.RequestOption = {\n    url: config.url || \"\",\n    method: config.method,\n    data: config.data,\n    header: config.headers,\n    dataType: \"json\",\n    timeout: config.timeout,\n  };\n\n  const dataType = config.dataType || \"json\";\n  reqConfig.dataType = dataType;\n\n  if (config.responseType && config.responseType !== \"json\") {\n    reqConfig.dataType = \"其他\";\n  }\n  return reqConfig;\n}\n","import { forEach } from \"./utils\";\n\nexport default function normalizeHeaderName(\n  headers: any,\n  normalizedHeaderName: string\n) {\n  if (!normalizedHeaderName) {\n    return;\n  }\n  forEach(headers, (headerValue, headerName: string) => {\n    if (\n      headerName !== normalizedHeaderName &&\n      headerName.toUpperCase() === normalizedHeaderName.toUpperCase()\n    ) {\n      headers[normalizedHeaderName] = headerValue;\n      delete headers[headerName];\n    }\n  });\n}\n","import getDefaultAdapter from \"./adapters\";\nimport normalizeHeaderName from \"./helpers/normalizeHeaderName\";\nimport setContentTypeIfUnset from \"./helpers/setContentTypeIfUnset\";\nimport { isPlainObject } from \"./helpers/utils\";\n\nconst DEFAULT_CONTENT_TYPE = \"application/x-www-form-urlencoded\";\n\nconst defaults: IAppletsRequestConfig = {\n  adapter: getDefaultAdapter(),\n\n  method: \"GET\",\n\n  timeout: 10000,\n\n  headers: {\n    common: {\n      Accept: \"application/json, text/plain, */*\",\n    },\n    ...getDefaultHeaders(),\n  },\n\n  transformConfig: [],\n\n  transformRequest: [\n    (data, headers): IAppletsRequest.IDataType => {\n      normalizeHeaderName(headers, \"Accept\");\n      normalizeHeaderName(headers, \"Content-Type\");\n\n      if (isPlainObject(data)) {\n        setContentTypeIfUnset(headers, \"application/json; charset=utf-8\");\n      }\n      return data;\n    },\n  ],\n\n  transformResponse: [],\n\n  xsrfCookieName: \"XSRF-TOKEN\",\n  xsrfHeaderName: \"X-XSRF-TOKEN\",\n\n  validateStatus(status): boolean {\n    if (status >= 200 && status < 300) {\n      return true;\n    }\n\n    return false;\n  },\n};\n\nfunction getDefaultHeaders(): any {\n  const headers: any = {};\n  [\"delete\", \"get\", \"head\", \"options\"].forEach((method) => {\n    headers[method] = {};\n  });\n  [\"post\", \"put\", \"patch\"].forEach((method) => {\n    headers[method] = {\n      \"Content-Type\": DEFAULT_CONTENT_TYPE,\n    };\n  });\n\n  return headers;\n}\n\nexport const STORAGE_COOKIES_KEY = \"miniRequest:cookies\";\n\nexport default defaults;\n","import { isFunction, isUndefined } from \"../helpers/utils\";\nimport wxRequest from \"./wx/weappRequest\";\n\nexport type IAdapterFn = (config: IAppletsRequestConfig) => IAppletsRequestPromise;\n\nexport default function getDefaultAdapter(): IAdapterFn {\n  if (!isUndefined(wx) && isFunction(wx.request)) {\n    return wxRequest as IAdapterFn;\n  }\n  return Promise.resolve;\n}\n","import { isUndefined } from \"./utils\";\n\nexport default function setContentTypeIfUnset(\n  headers: any,\n  value: string\n): void {\n  if (\n    !isUndefined(headers) &&\n    headers &&\n    isUndefined(headers[\"Content-Type\"])\n  ) {\n    headers[\"Content-Type\"] = value;\n  }\n}\n","import { isUndefined } from \"../helpers/utils\";\n\n/**\n * 根据response.status的值来判断是不是NETWORK_ERROR(网络错误)，如：请求不可用等\n * @param response 任何类型的响应数据\n * @example\n * // return true\n * isNetworkError({status: \"NETWORK_ERROR\"});\n * // return false\n * isNetworkError({status: \"TIMEOUT\"});\n * // return false\n * isNetworkError({});\n * @returns true or false\n *\n */\nexport default function isNetworkError(response: any): boolean {\n  if (isUndefined(response) || response === null) {\n    return false;\n  }\n  return response.status === \"NETWORK_ERROR\";\n}\n","import { isUndefined } from \"../helpers/utils\";\n\n/**\n * 根据response.status的值来判断是不是TIMEOUT(超时)\n * @param response 任何类型的响应数据\n * @example\n * // return true\n * isTimeout({status: \"TIMEOUT\"});\n * // return false\n * isTimeout({status: \"NETWORK_ERROR\"});\n * // return false\n * isTimeout({});\n * @returns true or false\n *\n */\nexport default function isTimeout(response: any): boolean {\n  if (isUndefined(response) || response === null) {\n    return false;\n  }\n  return response.status === \"TIMEOUT\";\n}\n","/*\n * @Author: youzhao.zhou\n * @Date: 2021-02-08 13:43:58\n * @Last Modified by: youzhao.zhou\n * @Last Modified time: 2021-02-08 13:49:22\n * @Description 将baseURL和relativeURL组合成完整的URL\n */\n\n/**\n * 将baseURL和relativeURL组合成完整的URL\n * @param baseURL defaults中配置的baseURL\n * @param relativeURL 请求的相对URL\n * @example\n * // returns https://xxx.com/api/login\n * combineURLs(\"https://xxx.com\", \"/api/login\")\n * @returns {string} Returns baseURL and relativeURL are spliced together\n */\nexport default function combineURLs(\n  baseURL: string | undefined,\n  relativeURL: string | undefined\n): string {\n  const tmpBaseURL = baseURL || \"\";\n  const tmpRelativeURL = relativeURL || \"\";\n\n  return tmpRelativeURL\n    ? `${tmpBaseURL.replace(/\\/+$/, \"\")}/${tmpRelativeURL.replace(/^\\/+/, \"\")}`\n    : tmpBaseURL;\n}\n","export default function isAbsoluteURL(url: string | undefined): boolean {\n  return /^([a-z][a-z\\d+-.]*:)?\\/\\//i.test(url || \"\");\n}\n","/*\n * @Author: youzhao.zhou\n * @Date: 2021-01-30 16:44:44\n * @Last Modified by: youzhao.zhou\n * @Last Modified time: 2021-02-07 12:29:11\n * @Description 处理url，将params数据，以query的方式拼接到url上，\n * @example /demo?p1=12&p2=34\n *\n * 需要处理的逻辑有：\n * 1. 丢弃URL中哈希#部分\n * 2. 忽略null和undefined的数据\n * 3. 参数值为数组\n * 4. 参数值为对象\n * 5. 参数值为Date类型\n * 6. 可以出现在URL中的特殊字符\n * 7. 保留url中的参数\n */\n\nimport { isDate, isFunction, isObject, isPlainObject } from \"./utils\";\n\n/**\n * @returns [key, val]\n */\nexport type IParamsEntries = [string, string];\n\nfunction parseUrl(\n  url: string,\n  params: string | { [key: string]: any },\n  paramsSerializer?: IAppletsRequest.IEmptyFN\n): string {\n  const tmpUrl = removeHash(url);\n\n  if (typeof params === \"string\") {\n    return assembleUrl(tmpUrl, params);\n  }\n\n  const paramsKeys = Object.keys(!isObject(params) ? {} : params);\n\n  if (paramsKeys.length === 0 && !isFunction(paramsSerializer)) {\n    return tmpUrl;\n  }\n\n  const queryStr = isFunction(paramsSerializer)\n    ? paramsSerializer?.(params)\n    : parseQueryStr(paramsKeys, params);\n\n  if (!queryStr) {\n    return tmpUrl;\n  }\n\n  return assembleUrl(tmpUrl, queryStr);\n}\n\nfunction assembleUrl(url: string, queryStr: string): string {\n  return url.includes(\"?\") ? `${url}&${queryStr}` : `${url}?${queryStr}`;\n}\n\n/**\n * 移除值为null和undefined的属性\n * @param val params中的value\n */\nfunction removeNullAndUndefinedVal(val: any): boolean {\n  if (val === null || typeof val === \"undefined\") {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * 获取query str\n * @param paramsKeys string[]\n * @param params object\n * @returns demo=234&demo1=demo\n */\nfunction parseQueryStr(paramsKeys: string[], params: any): string {\n  const paramsEntries: IParamsEntries[] = paramsKeys\n    .filter((paramsKey) => removeNullAndUndefinedVal(params[paramsKey]))\n    .map((paramKey) => parseParam(paramKey, params[paramKey]));\n\n  if (paramsEntries.length === 0) {\n    return \"\";\n  }\n\n  return paramsEntries.reduce((preStr, curParam): string => {\n    if (!curParam[0] || !curParam[1]) {\n      return preStr;\n    }\n\n    return `${preStr ? `${preStr}&` : \"\"}${curParam.join(\"=\")}`;\n  }, \"\");\n}\n\nfunction parseParam(key: string, val: any): IParamsEntries {\n  if (Array.isArray(val)) {\n    return parseArrayVal(key, val);\n  }\n\n  if (isDate(val)) {\n    return [encode(key), encode(val.toISOString())];\n  }\n\n  if (isPlainObject(val)) {\n    return [encode(key), encode(JSON.stringify(val))];\n  }\n\n  return [key, val];\n}\n\n/**\n * 处理参数值类型为数组的参数\n * @param key 参数名\n * @param val 参数值\n * @returns [key, ${val[0]}&${key}[]=${val[1]}&....&${key}[]=${val[n]}]\n */\nfunction parseArrayVal(key: string, val: any[]): IParamsEntries {\n  const values = val.map((item, i) => {\n    if (i === 0) {\n      return item;\n    }\n    return `${encode(`${key}[]`)}=${encode(item)}`;\n  });\n  return [encode(`${key}[]`), values.join(\"&\")];\n}\n\nfunction removeHash(url: string): string {\n  return url.includes(\"#\") ? url.slice(0, url.indexOf(\"#\")) : url;\n}\n\nfunction encode(str: string): string {\n  return encodeURIComponent(str)\n    .replace(/%40/g, \"@\")\n    .replace(/%3A/gi, \":\")\n    .replace(/%24/g, \"$\")\n    .replace(/%2C/gi, \",\")\n    .replace(/%20/g, \"+\")\n    .replace(/%5B/gi, \"[\")\n    .replace(/%5D/gi, \"]\");\n}\n\nexport default function transformUrl(\n  url: string,\n  params?: any,\n  paramsSerializer?: IAppletsRequest.IEmptyFN\n): string {\n  if (!url) {\n    return removeHash(url);\n  }\n  return parseUrl(url, params, paramsSerializer);\n}\n","interface IInterceptor<T> {\n  fulfilled: IAppletsRequest.IResolved<T>;\n  rejected: IAppletsRequest.IRejected | undefined;\n}\n\nexport default class InterceptorManager<T> {\n  private interceptors: (IInterceptor<T> | null)[];\n\n  constructor() {\n    this.interceptors = [];\n  }\n\n  use(\n    fulfilled: IAppletsRequest.IResolved<T>,\n    rejected?: IAppletsRequest.IRejected,\n  ): IAppletsRequest.IInterceptorId {\n    this.interceptors.push({\n      fulfilled,\n      rejected,\n    });\n\n    return this.interceptors.length - 1;\n  }\n\n  eject(interceptorId: IAppletsRequest.IInterceptorId): void {\n    if (!this.interceptors[interceptorId]) {\n      return;\n    }\n    this.interceptors[interceptorId] = null;\n  }\n\n  forEach(fn: (interceptor: IInterceptor<T>) => void): void {\n    this.interceptors.forEach((interceptor) => {\n      if (typeof fn === \"function\" && interceptor !== null) {\n        fn(interceptor);\n      }\n    });\n  }\n}\n","/*\n * @Author: youzhao.zhou\n * @Date: 2021-02-01 22:55:50\n * @Last Modified by: youzhao.zhou\n * @Last Modified time: 2021-02-09 18:07:00\n * @Description 合并config\n */\n\nimport { forEach, isPlainObject, isUndefined, merge } from \"../helpers/utils\";\n\nexport default function mergeConfig(\n  config1: IAppletsRequestConfig,\n  optionalConfig2?: IAppletsRequestConfig,\n): IAppletsRequestConfig {\n  const config2 = optionalConfig2 || {};\n\n  const config = Object.create(null);\n\n  // 只从config2获取值\n  const valueFromConfig2Keys = [\"url\", \"method\", \"data\"];\n\n  // 需要config1和config2中需要深合并的值\n  const requiredMergeDeepPropertiesKeys = [\"headers\", \"params\"];\n\n  // 只要在config2中存在key，就赋值config2[key]，不考虑null和undefined；\n  // 如果config2中不存在key，config1中存在该key，就赋值config1[key]；\n  // config1和config2都不存在，则跳过\n  const directMergeKeys = [\"validateStatus\", \"writeCookies\", \"readCookies\"];\n\n  // 优先从config2中取值，config2中没有值的，再从config1取值\n  const config2FirstConfig1DefaultKeys = [\n    \"baseURL\",\n    \"transformConfig\",\n    \"transformRequest\",\n    \"transformResponse\",\n    \"paramsSerializer\",\n    \"timeout\",\n    \"adapter\",\n    \"responseType\",\n    \"xsrfCookieName\",\n    \"xsrfHeaderName\",\n    \"cancelToken\",\n  ];\n\n  valueFromConfig2Keys.forEach(getValueFromConfig2);\n\n  config2FirstConfig1DefaultKeys.forEach(getValueFromConfig2First);\n\n  directMergeKeys.forEach(getDirectValue);\n\n  requiredMergeDeepPropertiesKeys.forEach(deepMergeConfig);\n\n  /**\n   * 只从config2获取值\n   * @param key\n   */\n  function getValueFromConfig2(key: string): void {\n    const val = config2[key];\n    if (isUndefined(val)) {\n      return;\n    }\n    config[key] = mergeObject(val);\n  }\n\n  /**\n   * 优先从config2中取值，config2中没有值的，再从config1取值\n   * @param key\n   */\n  function getValueFromConfig2First(key: string): void {\n    const val = config2[key];\n    if (!isUndefined(val)) {\n      config[key] = mergeObject(val);\n      return;\n    }\n    if (!isUndefined(config1[key])) {\n      config[key] = mergeObject(config1[key]);\n    }\n  }\n\n  /**\n   * config2中key就用config2，没有就用config1\n   * @param key\n   */\n  function getDirectValue(key: string): void {\n    if (key in config2) {\n      config[key] = mergeObject(config2[key]);\n      return;\n    }\n    if (key in config1) {\n      config[key] = mergeObject(config1[key]);\n    }\n  }\n\n  function deepMergeConfig(key: string): void {\n    const val1 = config1[key];\n    const val2 = config2[key];\n    // 如果两个config1和config2都有值，那么合并两个值\n    if (!isUndefined(val2)) {\n      config[key] = getMergeValue(val1, val2);\n      return;\n    }\n\n    if (!isUndefined(val1)) {\n      config[key] = getMergeValue(undefined, val1);\n    }\n  }\n\n  function getMergeValue(target: any, source: any): any {\n    if (isPlainObject(target) && isPlainObject(source)) {\n      return merge(target, source);\n    }\n\n    if (isPlainObject(source)) {\n      return merge({}, source);\n    }\n\n    return mergeObject(source);\n  }\n\n  function mergeObject(val: any): any {\n    if (Array.isArray(val)) {\n      return merge(val);\n    }\n    if (isPlainObject(val)) {\n      return merge(val);\n    }\n    return val;\n  }\n\n  const hadMergeKeys = valueFromConfig2Keys\n    .concat(requiredMergeDeepPropertiesKeys)\n    .concat(directMergeKeys)\n    .concat(requiredMergeDeepPropertiesKeys);\n\n  const remainKeys = Object.keys(config1)\n    .concat(Object.keys(config2))\n    .filter((key) => !hadMergeKeys.includes(key));\n\n  forEach(remainKeys, deepMergeConfig);\n\n  return config;\n}\n","/*\n * @Author: youzhao.zhou\n * @Date: 2021-01-31 11:14:33\n * @Last Modified by: youzhao.zhou\n * @Last Modified time: 2021-02-08 16:50:27\n * @Description 处理请求headers和处理响应headers\n */\n\nimport { getCookie } from \"../adapters/wx/storageCookies\";\nimport { isPlainObject, isString, merge } from \"./utils\";\n\n/**\n * 格式化请求头中key的格式\n * @param headers 请求头数据\n * @param normalizedNames 标准的请求头key值，如：[\"Content-Type\"]\n * @example\n * // Returns {\"Content-Type\", \"plain/text\"}\n * formatterHeader({\"content-type\": \"plain/text\"}, [\"Content-Type\"]);\n * @returns {Object} 返回标准化的请求头数据\n */\nexport function formattedHeader(\n  headers: any,\n  normalizedNames: string[]\n): Record<string, string> {\n  const normalizedHeaders: Record<string, string> = {};\n  if (!isPlainObject(headers)) {\n    return normalizedHeaders;\n  }\n\n  if (normalizedNames.length === 0) {\n    return headers;\n  }\n\n  const headerUpperKeyMapping: Record<string, string> = {};\n  normalizedNames.forEach((key) => {\n    headerUpperKeyMapping[key.toUpperCase()] = key;\n  });\n\n  Object.keys(headers).forEach((header) => {\n    const upperHeader = header.toUpperCase();\n    const normalizedKey = headerUpperKeyMapping[upperHeader];\n    normalizedHeaders[normalizedKey || header] = headers[header];\n  });\n\n  return normalizedHeaders;\n}\n\n/**\n * 先将headers的key标准化处理，如果未设置Content-Type的，根据传输的数据类型，设置Content-Type的值\n * @param headers 请求头\n * @param data 请求body体中的数据\n * @example\n * // return {\"Content-Type\": \"application/json; charset=utf-8\"}\n * assembleReqHeaders({}, {username: \"tome\"});\n * @returns {Record<string, string>}\n */\nexport default function assembleReqHeaders(\n  headers: any,\n  data: IAppletsRequest.IDataType | undefined\n): Record<string, string> {\n  const reqHeaders = formattedHeader(Object.assign(headers || {}), [\n    \"Content-Type\",\n  ]);\n\n  if (isPlainObject(data) && !reqHeaders[\"Content-Type\"]) {\n    reqHeaders[\"Content-Type\"] = \"application/json; charset=utf-8\";\n  }\n\n  if (data === null || typeof data === \"undefined\") {\n    delete reqHeaders[\"Content-Type\"];\n  }\n\n  return reqHeaders;\n}\n\n/**\n * 合并headers中【headers.common】[headers[method]】数据，删除不需要的默认属性\n * @param headers 请求头数据\n * @param method 请求method\n * @example\n * // Return {\"Content-Type\": \"plain/text\", \"Accept\": \"*\"}\n * filterHeaders({\n *   common: {\n *     \"Content-Type\": \"plain/text\"\n *   },\n *   post: {\n *     \"Accept\": \"*\"\n *   }\n * }, \"post\");\n * @returns {Record<string, any>} 返回完整可用的headers\n *\n * {\"Content-Type\": \"plain/text\", \"Accept\": \"*\"}\n */\nexport function filterHeaders(\n  headers: Record<string, any> | undefined,\n  method: string\n): Record<string, any> {\n  if (!headers) {\n    return {};\n  }\n\n  const mergedHeaders: Record<string, any> = merge(\n    headers.common,\n    headers[method.toLowerCase()],\n    headers\n  );\n\n  [\n    \"delete\",\n    \"get\",\n    \"post\",\n    \"head\",\n    \"patch\",\n    \"put\",\n    \"options\",\n    \"common\",\n  ].forEach((deleteMethod) => {\n    delete mergedHeaders[deleteMethod];\n  });\n\n  return mergedHeaders;\n}\n\n/**\n * 和原有的cookie string拼接成新的cookie string\n * @param cookiesString header中已存在的cookie string\n * @param cookieName 需要新加入的cookie keyName\n * @example\n * // return token=tokenString; username=tom\n * combineCookieStr(\"token=tokenString\", \"username\");\n * @returns {string} 拼接后的cookie string\n */\nexport function combineCookiesStr(\n  cookiesString: string | undefined,\n  cookieName: string | undefined\n): any {\n  if (!cookieName && String(cookieName) !== String(0)) {\n    return cookiesString;\n  }\n\n  const cookieVal = getCookie(cookieName);\n\n  if (!isString(cookiesString)) {\n    return !cookieVal && String(cookieVal) !== \"0\"\n      ? cookieName\n      : `${spliceCookieStr(cookieName as string, cookieVal)}`;\n  }\n  return `${cookiesString}; ${spliceCookieStr(\n    cookieName as string,\n    cookieVal\n  )}`;\n}\n\nfunction spliceCookieStr(cookieName: string, cookieVal: any): string {\n  return !cookieVal && String(cookieVal) !== \"0\"\n    ? cookieName\n    : `${cookieName}=${cookieVal}`;\n}\n","import { isPlainObject, isString, merge } from \"../../helpers/utils\";\n\nconst STORAGE_COOKIES_KEY = \"miniRequest:cookies\";\n\nexport default function storageCookies(cookies: Record<string, string> | undefined): void {\n  if (!cookies || !isPlainObject(cookies)) {\n    return;\n  }\n  try {\n    const cacheCookies = wx.getStorageSync(STORAGE_COOKIES_KEY);\n    wx.setStorageSync(STORAGE_COOKIES_KEY, merge(cacheCookies, cookies));\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nexport function getCookie(cookieName: string | undefined): string {\n  try {\n    const cacheCookies = wx.getStorageSync(STORAGE_COOKIES_KEY);\n    if (!cacheCookies || !cookieName || !isString(cacheCookies[cookieName])) {\n      return \"\";\n    }\n\n    return cacheCookies[cookieName];\n  } catch (e) {\n    console.error(e);\n    return \"\";\n  }\n}\n","/*\n * @Author: youzhao.zhou\n * @Date: 2021-02-02 18:26:33\n * @Last Modified by: youzhao.zhou\n * @Last Modified time: 2021-02-06 22:02:36\n * @Description 执行transform config，并且转换成对应环境的配置文件\n */\n\nimport copyConfig from \"../helpers/copyConfig\";\nimport { forEach } from \"../helpers/utils\";\n\nexport default function transformConfig(\n  config: IAppletsRequestConfig,\n  fns: IAppletsRequestConfig[\"transformConfig\"]\n): IAppletsRequestConfig {\n  let formattedConfig = config;\n\n  forEach(fns, (fn) => {\n    if (typeof fn === \"function\") {\n      formattedConfig = fn(config);\n    }\n  });\n\n  return copyConfig(formattedConfig);\n}\n","/*\n * @Author: youzhao.zhou\n * @Date: 2021-02-02 18:16:24\n * @Last Modified by: youzhao.zhou\n * @Last Modified time: 2021-02-08 13:39:12\n * @Description 创建副本，避免引用类型影响\n */\n\nimport { merge } from \"./utils\";\n\nexport default function copyConfig(\n  config: IAppletsRequestConfig | undefined | null\n): IAppletsRequestConfig {\n  if (!config) {\n    return {};\n  }\n  if (Array.isArray(config)) {\n    return merge([], config);\n  }\n\n  return merge({}, config) as IAppletsRequestConfig;\n}\n","/*\n * @Author: youzhao.zhou\n * @Date: 2021-02-02 17:57:28\n * @Last Modified by: youzhao.zhou\n * @Last Modified time: 2021-02-05 23:11:21\n * @Description transformRequest和transformResponse辅助函数\n */\n\nimport { forEach } from \"../helpers/utils\";\n\nexport type ITransformer =\n  | IAppletsRequest.ITransformer\n  | IAppletsRequest.ITransformer[];\n\nexport default function transformData(\n  data: any,\n  headers: any,\n  fns: ITransformer | undefined,\n): IAppletsRequest.IDataType {\n  let formattedData = data;\n\n  forEach(fns, (fn) => {\n    if (typeof fn === \"function\") {\n      formattedData = fn(data, headers);\n    }\n  });\n\n  return formattedData;\n}\n","import { isUndefined } from \"./utils\";\n\n/**\n * Module variables.\n * @private\n */\n\nconst decode = decodeURIComponent;\nconst encode = encodeURIComponent;\nconst pairSplitRegExp = /; */;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\n// eslint-disable-next-line no-control-regex\nconst fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n *\n * @param {string} cookiesStr cookies字符串\n * @param options\n */\nexport default function parseCookies(\n  cookiesStr: any,\n  options: any = {}\n): Record<string, string> {\n  if (!cookiesStr) {\n    return {};\n  }\n\n  return parse(cookiesStr, options);\n}\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(cookiesStr: string, options: any = {}): Record<string, string> {\n  if (typeof cookiesStr !== \"string\") {\n    return {};\n  }\n\n  const cookies: Record<string, string> = {};\n  const pairs = cookiesStr.split(pairSplitRegExp);\n  const decodeFn = options.decode || decode;\n\n  pairs.forEach((pair: string) => {\n    const qeInd = pair.indexOf(\"=\");\n    if (qeInd < 0) {\n      return;\n    }\n\n    const key = pair.substr(0, qeInd).trim();\n    let val = pair.substr(qeInd + 1, pair.length).trim();\n\n    // 如果val是含有“”的字符串，则删除“”\n    if (val[0] === '\"') {\n      val = val.slice(1, -1);\n    }\n\n    if (isUndefined(cookies[key])) {\n      cookies[key] = tryDecode(val, decodeFn);\n    }\n  });\n\n  return cookies;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\nexport function serializeCookie(\n  name: string,\n  val: string,\n  options: any = {}\n): string {\n  const encodeFn = options.encode || encode;\n\n  serializeThrowErr(typeof encodeFn !== \"function\", \"option encode is invalid\");\n  serializeThrowErr(!regPass(name), \"argument name is invalid\");\n\n  const value = encodeFn(val);\n\n  serializeThrowErr(!regPass(value), \"argument val is invalid\");\n\n  let str = `${name}=${value}`;\n\n  if (options.maxAge || options.maxAge === 0) {\n    const maxAge = options.maxAge - 0;\n\n    serializeThrowErr(\n      Number.isNaN(maxAge) || !Number.isFinite(maxAge),\n      \"option maxAge is invalid\"\n    );\n\n    str += `; Max-Age=${Math.floor(maxAge)}`;\n  }\n\n  if (options.domain) {\n    serializeThrowErr(!regPass(options.domain), \"option domain is invalid\");\n\n    str += `; Domain=${options.domain}`;\n  }\n\n  if (options.path) {\n    serializeThrowErr(!regPass(options.path), \"option path is invalid\");\n\n    str += `; Path=${options.path}`;\n  }\n\n  if (options.expires) {\n    serializeThrowErr(\n      typeof options.expires.toUTCString !== \"function\",\n      \"option expires is invalid\"\n    );\n\n    str += `; Expires=${options.expires.toUTCString()}`;\n  }\n\n  if (options.httpOnly) {\n    str += \"; HttpOnly\";\n  }\n\n  if (options.secure) {\n    str += \"; Secure\";\n  }\n\n  if (options.sameSite) {\n    str += getSameSiteCookieStr(options.sameSite);\n  }\n\n  return str;\n}\n\nfunction getSameSiteCookieStr(sameSite: string | boolean): string {\n  const tmpSameSite =\n    typeof sameSite === \"string\" ? sameSite.toLowerCase() : sameSite;\n\n  if (tmpSameSite === true || tmpSameSite === \"strict\") {\n    return \"; SameSite=Strict\";\n  }\n\n  if (tmpSameSite === \"lax\") {\n    return \"; SameSite=Lax\";\n  }\n\n  if (tmpSameSite === \"none\") {\n    return \"; SameSite=None\";\n  }\n\n  throw new TypeError(\"option sameSite is invalid\");\n}\n\nfunction serializeThrowErr(isErr: boolean, errMsg: string): never | void {\n  if (!isErr) {\n    return;\n  }\n  throw new TypeError(errMsg);\n}\n\nfunction regPass(data: any): boolean {\n  return Boolean(data) && fieldContentRegExp.test(data);\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str: string, decodeFn: any): string {\n  try {\n    return decodeFn(str);\n  } catch (e) {\n    return str;\n  }\n}\n","/*\n * @Author: youzhao.zhou\n * @Date: 2021-01-31 21:52:37\n * @Last Modified by: youzhao.zhou\n * @Last Modified time: 2021-02-05 23:14:19\n * @Description 处理错误\n */\n\nexport default class AppletsRequestError {\n  errMsg: string;\n\n  config: IAppletsRequest.IHttpConfig;\n\n  status: IAppletsRequestStatus;\n\n  response: IAppletsRequestResponse | undefined;\n\n  extra = null;\n\n  constructor(\n    message: string,\n    config: IAppletsRequest.IHttpConfig,\n    status: IAppletsRequestStatus,\n    response: IAppletsRequestResponse | undefined,\n    extra?: any,\n  ) {\n    // super(message);\n\n    this.errMsg = message;\n    this.config = config;\n    this.status = status;\n    this.response = response;\n    this.extra = extra;\n\n    // Object.setPrototypeOf(this, AppletsRequestError.prototype);\n  }\n}\n\nexport function createError(\n  message: string,\n  config: IAppletsRequest.IHttpConfig,\n  status: IAppletsRequestStatus,\n  response: IAppletsRequestResponse | undefined,\n  extra?: any,\n): AppletsRequestError {\n  const tmpStatus = !status && status !== 0 ? \"NETWORK_ERROR\" : status;\n\n  return new AppletsRequestError(message, config, tmpStatus, response, extra);\n}\n","/* eslint-disable max-len */\n/*\n * @Author: youzhao.zhou\n * @Date: 2021-02-05 14:31:47\n * @Last Modified by: youzhao.zhou\n * @Last Modified time: 2021-02-09 16:54:10\n * @Description http request adapter\n * 1. 自定义请求适配器接口规范\n * 2. 执行成功需要调用resolve\n * 3. 执行失败需要调用reject\n * 4. 监听用户取消时间执行abort\n *\n * @example:\n * 1. 创建实例：const adapter = new Adapter(config);\n * 2. 请求成功：adapter.resolve({headers: any, status: 200, data: {}, response: any}, resolve);\n * 3. 请求失败：adapter.reject({errMsg: \"Request Timeout\", status: \"TIMEOUT\", data: any, extra: any}, reject);\n * 4. 监听用户取消行为：adapter.abort((reason) => {\n *    // do something\n *    reject(reason);\n * });\n */\nimport { isUndefined } from \"../helpers/utils\";\n\nexport interface IResolveOptions {\n  headers: Record<string, any>;\n  status: number;\n  data: any;\n  response?: any;\n}\n\nexport default class Adapter {\n  private reqConfig: IAppletsRequest.IHttpConfig;\n\n  constructor(config: IAppletsRequest.IHttpConfig) {\n    this.reqConfig = config;\n  }\n\n  /**\n   * 接口请求成功执行该方法\n   * @param options response数据\n   * @param resolve Promise.resolve\n   */\n  resolve(\n    options: IAppletsRequest.IAdapterResolveOptions,\n    resolve: IAppletsRequest.IResolved<any>\n  ): void {\n    if (isUndefined(options) || options === null) {\n      resolve({\n        headers: {},\n        status: 200,\n        data: {},\n        config: this.reqConfig,\n        originalRes: null,\n      });\n    }\n\n    resolve({\n      headers: options.headers,\n      config: this.reqConfig,\n      data: options.data,\n      status: options.status,\n      originalRes: isUndefined(options.response) ? null : options.response,\n    });\n  }\n\n  /**\n   * 接口请求失败执行该方法\n   * @param options response数据\n   * @param reject Promise.reject\n   */\n  reject(\n    options: IAppletsRequest.IAdapterRejectOptions,\n    reject: IAppletsRequest.IRejected\n  ): void {\n    if (isUndefined(options) || options === null) {\n      reject({\n        status: \"NETWORK_ERROR\",\n        errMsg: \"Reject arguments Error\",\n        config: this.reqConfig,\n        extra: null,\n      });\n    }\n\n    reject({\n      config: this.reqConfig,\n      status: options.status,\n      data: options.data,\n      errMsg: options.errMsg,\n      extra: isUndefined(options.extra) ? null : options.extra,\n    });\n  }\n\n  /**\n   * 取消接口请求\n   * @param executor 监听执行取消接口请求操作的监听函数\n   */\n  cancel(executor: (cancel: IAppletsRequest.ICanceler) => void): void {\n    if (!this.reqConfig.cancelToken) {\n      return;\n    }\n\n    this.reqConfig.cancelToken.execAbort((reason) => {\n      executor(reason);\n    });\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport assembleReqHeaders, {\n  combineCookiesStr,\n  filterHeaders,\n  formattedHeader,\n} from \"../helpers/assembleHeaders\";\nimport transformMethod from \"../helpers/transformMethod\";\nimport transformUrl from \"../helpers/transformUrl\";\nimport transformConfig from \"./transformConfig\";\nimport transformData from \"./transformData\";\nimport isCancel from \"../cancel/isCancel\";\nimport isURLSameOrigin from \"../helpers/isURLSameOrigin\";\nimport getCookies, { getCookie } from \"../cookie/getCookies\";\nimport { isPlainObject } from \"../helpers/utils\";\nimport parseCookies from \"../helpers/parseCookie\";\nimport { createError } from \"./AppletsRequestError\";\nimport combineURLs from \"../helpers/combineURLs\";\nimport isAbsoluteURL from \"../helpers/isAbsoluteURL\";\nimport Adapter from \"../adapters/Adapter\";\nimport writeCookies from \"../cookie/writeCookies\";\n\nasync function request(\n  config: IAppletsRequestConfig\n): Promise<IAppletsRequestResponse> {\n  const transformedConfig = formattedConfig(config);\n\n  try {\n    const res = await config.adapter!(transformedConfig);\n\n    throwIfCancellationRequested(transformedConfig);\n\n    if (isPlainObject(res.headers)) {\n      res.cookies = parseCookies(\n        formattedHeader(res.headers, [\"Set-Cookie\"])[\"Set-Cookie\"]\n      );\n    }\n\n    writeCookies(config, res.cookies);\n\n    if (\n      typeof config.validateStatus === \"function\" &&\n      config.validateStatus(res.status)\n    ) {\n      res.data = transformData(\n        res.data,\n        res.headers,\n        transformedConfig.transformResponse\n      );\n\n      return res;\n    }\n\n    return Promise.reject(\n      createError(\n        `Request failed with status code ${res.status}`,\n        res.config,\n        res.status,\n        res\n      )\n    );\n  } catch (reason) {\n    if (isCancel(reason)) {\n      return Promise.reject(reason);\n    }\n\n    throwIfCancellationRequested(transformedConfig);\n\n    const err = reason as IAppletsRequestRejectData;\n\n    if (err && err.response) {\n      err.response.data = transformData(\n        err.response.data,\n        err.response.headers,\n        transformedConfig.transformResponse\n      );\n    }\n\n    return Promise.reject(\n      createError(err.errMsg, err.config, err.status, err.response, err.extra)\n    );\n  }\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config: IAppletsRequestConfig): void {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\nfunction formattedConfig(\n  config: IAppletsRequestConfig\n): IAppletsRequest.IHttpConfig {\n  throwIfCancellationRequested(config);\n\n  const { baseURL, url, params } = config;\n  const combinedURL = isAbsoluteURL(url) ? url : combineURLs(baseURL, url!);\n  const formattedUrl = transformUrl(\n    combinedURL!,\n    params,\n    config.paramsSerializer\n  );\n  const method = transformMethod(config.method);\n\n  let transformedConfig: IAppletsRequestConfig = {\n    ...config,\n    // 过滤headers中无用的配置\n    headers: filterHeaders(config.headers, method),\n  };\n\n  // 先执行data转换\n  transformedConfig.data = transformData(\n    transformedConfig.data,\n    transformedConfig.headers,\n    transformedConfig.transformRequest\n  );\n\n  transformedConfig.headers = assembleReqHeaders(\n    transformedConfig.headers,\n    transformedConfig.data\n  );\n\n  // 后执行config转换，最后返回config副本，避免引用类型导致数据混乱问题\n  transformedConfig = transformConfig(\n    transformedConfig,\n    config.transformConfig\n  );\n\n  // 添加Cookie头\n  const cookiesStr = getCookiesStr(transformedConfig);\n  if (cookiesStr) {\n    transformedConfig.headers!.Cookies = cookiesStr;\n  }\n\n  // xsrf 防御\n  const xsrfToken = getCookie(\n    getCookies(config),\n    transformedConfig.xsrfCookieName\n  );\n  if (xsrfToken) {\n    transformedConfig.headers![transformedConfig.xsrfHeaderName!] = xsrfToken;\n  }\n\n  return {\n    ...transformedConfig,\n    url: formattedUrl,\n    method,\n    headers: transformedConfig.headers as Record<string, string>,\n    getRequestTask: formattedGetRequestTaskFunction(\n      transformedConfig.getRequestTask\n    ),\n    Adapter,\n  };\n}\n\nfunction formattedGetRequestTaskFunction(fn: any): () => any {\n  if (typeof fn === \"function\") {\n    return fn;\n  }\n  return (): void => {\n    // empty\n  };\n}\n\nfunction getCookiesStr(config: IAppletsRequestConfig): string {\n  if (config.withCredentials || isURLSameOrigin()) {\n    return combineCookiesStr(\n      config.headers!.Cookies as string,\n      config.xsrfCookieName\n    );\n  }\n  return \"\";\n}\n\nexport default request;\n","export default function transformMethod(\n  method?: IAppletsRequest.IMethod | undefined\n): IAppletsRequest.INormalizeMethod {\n  if (!method || typeof method !== \"string\") {\n    return \"GET\";\n  }\n  return method.toUpperCase() as IAppletsRequest.INormalizeMethod;\n}\n","import { STORAGE_COOKIES_KEY } from \"../defaults\";\nimport { isFunction, isString } from \"../helpers/utils\";\n\nexport default function getCookies(\n  config: IAppletsRequestConfig\n): Record<string, any> {\n  if (!isFunction(config.readCookies)) {\n    return {};\n  }\n\n  return config.readCookies?.(STORAGE_COOKIES_KEY) as Record<string, any>;\n}\n\nexport function getCookie(\n  cookies: Record<string, any>,\n  cookieName: string | undefined\n): string {\n  try {\n    if (!cookies || !cookieName || !isString(cookies[cookieName])) {\n      return \"\";\n    }\n\n    return cookies[cookieName];\n  } catch (e) {\n    console.error(e);\n    return \"\";\n  }\n}\n","import { STORAGE_COOKIES_KEY } from \"../defaults\";\nimport { isFunction } from \"../helpers/utils\";\n\nexport default function writeCookies(\n  config: IAppletsRequestConfig,\n  cookies: any\n): void {\n  if (!config.autoCookies || !isFunction(config.writeCookies)) {\n    return;\n  }\n\n  config.writeCookies?.(STORAGE_COOKIES_KEY, cookies);\n}\n","import CancelToken from \"../cancel/CancelToken\";\nimport isCancel from \"../cancel/isCancel\";\nimport defaults from \"../defaults\";\nimport isNetworkError from \"../error/isNetworkError\";\nimport isTimeout from \"../error/isTimeout\";\nimport combineURLs from \"../helpers/combineURLs\";\nimport isAbsoluteURL from \"../helpers/isAbsoluteURL\";\nimport transformUrl from \"../helpers/transformUrl\";\nimport { assign, isPlainObject } from \"../helpers/utils\";\nimport InterceptorManager from \"./InterceptorManager\";\nimport mergeConfig from \"./mergeConfig\";\nimport request from \"./request\";\n\ninterface IInterceptors {\n  request: InterceptorManager<IAppletsRequestConfig>;\n  response: InterceptorManager<IAppletsRequestResponse>;\n}\n\ninterface IPromiseChain<T> {\n  fulfilled:\n    | IAppletsRequest.IResolved<T>\n    | ((config: IAppletsRequestConfig) => IAppletsRequestPromise);\n  rejected?: IAppletsRequest.IRejected;\n}\n\nexport default class AppletsRequest {\n  AppletsRequest = AppletsRequest;\n\n  CancelToken = CancelToken;\n\n  isCancel = isCancel;\n\n  defaults: IAppletsRequestConfig = {};\n\n  interceptors: IInterceptors;\n\n  constructor(config?: IAppletsRequestConfig) {\n    if (config) {\n      this.defaults = config;\n    }\n\n    this.interceptors = {\n      request: new InterceptorManager<IAppletsRequestConfig>(),\n      response: new InterceptorManager<IAppletsRequestResponse>(),\n    };\n  }\n\n  request(\n    options: string | IAppletsRequestConfig,\n    config?: IAppletsRequestConfig\n  ): IAppletsRequestPromise {\n    let formattedConfig: IAppletsRequestConfig = {};\n    if (typeof options === \"string\") {\n      formattedConfig = this.transformConfig(config);\n      formattedConfig.url = options;\n    } else {\n      formattedConfig = options;\n    }\n\n    formattedConfig = mergeConfig(this.defaults, formattedConfig);\n\n    const chain: IPromiseChain<any>[] = [\n      {\n        fulfilled: request,\n        rejected: undefined,\n      },\n    ];\n\n    this.interceptors.request.forEach(\n      (interceptor) =>\n        // eslint-disable-next-line implicit-arrow-linebreak\n        chain.unshift(interceptor)\n      // eslint-disable-next-line function-paren-newline\n    );\n\n    this.interceptors.response.forEach(\n      (interceptor) =>\n        // eslint-disable-next-line implicit-arrow-linebreak\n        chain.push(interceptor)\n      // eslint-disable-next-line function-paren-newline\n    );\n\n    let promise = Promise.resolve(formattedConfig);\n\n    chain.forEach((interceptor) => {\n      if (!interceptor) {\n        return;\n      }\n      promise = promise.then(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    return promise as IAppletsRequestPromise;\n  }\n\n  get(url: string, config?: IAppletsRequestConfig): IAppletsRequestPromise {\n    return this.requestWithMethod(url, \"GET\", config);\n  }\n\n  delete(url: string, config?: IAppletsRequestConfig): IAppletsRequestPromise {\n    return this.requestWithMethod(url, \"DELETE\", config);\n  }\n\n  head(url: string, config?: IAppletsRequestConfig): IAppletsRequestPromise {\n    return this.requestWithMethod(url, \"HEAD\", config);\n  }\n\n  options(url: string, config?: IAppletsRequestConfig): IAppletsRequestPromise {\n    return this.requestWithMethod(url, \"OPTIONS\", config);\n  }\n\n  post(\n    url: string,\n    data?: IAppletsRequest.IDataType,\n    config?: IAppletsRequestConfig\n  ): IAppletsRequestPromise {\n    return this.requestWithData(url, \"POST\", data, config);\n  }\n\n  put(\n    url: string,\n    data?: IAppletsRequest.IDataType,\n    config?: IAppletsRequestConfig\n  ): IAppletsRequestPromise {\n    return this.requestWithData(url, \"PUT\", data, config);\n  }\n\n  create(config?: IAppletsRequestConfig): AppletsRequestInstance {\n    const miniRequest = new AppletsRequest(mergeConfig(defaults, config));\n    const ins: AppletsRequestInstance = AppletsRequest.prototype.request.bind(\n      miniRequest\n    ) as AppletsRequestInstance;\n\n    return assign(ins, miniRequest);\n  }\n\n  all(promises: IAppletsRequestPromise[]): Promise<IAppletsRequestResponse[]> {\n    if (promises.length === 0) {\n      throw new TypeError(`arguments length is 0`);\n    }\n    return Promise.all(promises);\n  }\n\n  getUri(config: IAppletsRequestConfig): string {\n    const { url, baseURL, params } = config;\n    const tmpUrl = url || \"\";\n    const combinedURL = isAbsoluteURL(tmpUrl)\n      ? tmpUrl\n      : combineURLs(baseURL || \"\", tmpUrl);\n    const formattedUrl = transformUrl(\n      combinedURL,\n      params,\n      config.paramsSerializer\n    );\n    return formattedUrl;\n  }\n\n  isTimeout = isTimeout;\n\n  isNetworkError = isNetworkError;\n\n  private requestWithMethod(\n    url: string,\n    method: IAppletsRequest.IMethod,\n    config?: IAppletsRequestConfig\n  ): IAppletsRequestPromise {\n    return this.request({\n      ...this.transformConfig(config),\n      url,\n      method,\n    });\n  }\n\n  private requestWithData(\n    url: string,\n    method: IAppletsRequest.IMethod,\n    data?: IAppletsRequest.IDataType,\n    config?: IAppletsRequestConfig\n  ): IAppletsRequestPromise {\n    return this.requestWithMethod(url, method, {\n      ...this.transformConfig(config),\n      data,\n    });\n  }\n\n  private transformConfig(\n    config?: IAppletsRequestConfig\n  ): IAppletsRequestConfig {\n    return isPlainObject(config) ? config : {};\n  }\n}\n","import AppletsRequest from \"./core/AppletsRequest\";\n\n/**\n * 创建AppletsRequest实例\n * @param {IAppletsRequestConfig} config\n */\nexport function createAppletsRequestInstance(\n  config?: IAppletsRequestConfig\n): AppletsRequestInstance {\n  const request = new AppletsRequest(config);\n\n  return request.create(config);\n}\n\n/**\n * 默认miniRequest\n */\nconst miniRequest = createAppletsRequestInstance();\n\nexport default miniRequest;\n\nexport { AppletsRequest as AppletsRequest };\n"],"names":["message","this","Cancel","executor","promise","Promise","resolve","_this","promiseResolve","cancel","bind","CancelToken","token","cancelFn","reason","resolution","then","getDataType","val","Object","prototype","toString","call","isPlainObject","getPrototypeOf","isUndefined","forEach","obj","fn","arr","Array","isArray","item","i","keys","key","merge","_i","objs","length","create","result","assignValue","isString","isFunction","isCancel","canceler","weappRequest","config","dataParser","data","JSON","parse","e","reject","originalConfig","tmpConfig","Adapter","reqConfig","url","method","header","headers","dataType","timeout","responseType","configAdapter","adapterConfig","TypeError","adapter","request","wx","success","res","status","response","statusCode","requestSuccess","fail","err","errData","errMsg","toLowerCase","includes","msg","type","failType","rejectData","extra","complete","abort","getRequestTask","normalizeHeaderName","normalizedHeaderName","headerValue","headerName","toUpperCase","defaults","wxRequest","common","Accept","Content-Type","transformConfig","transformRequest","value","setContentTypeIfUnset","transformResponse","xsrfCookieName","xsrfHeaderName","validateStatus","STORAGE_COOKIES_KEY","isNetworkError","isTimeout","combineURLs","baseURL","relativeURL","tmpBaseURL","tmpRelativeURL","replace","isAbsoluteURL","test","parseUrl","params","paramsSerializer","tmpUrl","removeHash","assembleUrl","paramsKeys","queryStr","paramsEntries","filter","paramsKey","removeNullAndUndefinedVal","map","paramKey","values","encode","join","parseArrayVal","isDate","toISOString","stringify","parseParam","reduce","preStr","curParam","parseQueryStr","slice","indexOf","str","encodeURIComponent","transformUrl","interceptors","InterceptorManager","fulfilled","rejected","push","interceptorId","interceptor","mergeConfig","config1","optionalConfig2","config2","valueFromConfig2Keys","requiredMergeDeepPropertiesKeys","directMergeKeys","deepMergeConfig","val1","val2","getMergeValue","undefined","target","source","mergeObject","hadMergeKeys","concat","formattedHeader","normalizedNames","normalizedHeaders","headerUpperKeyMapping","upperHeader","normalizedKey","filterHeaders","mergedHeaders","deleteMethod","combineCookiesStr","cookiesString","cookieName","String","cookieVal","cacheCookies","getStorageSync","console","error","getCookie","spliceCookieStr","fns","formattedConfig","copyConfig","transformData","formattedData","decode","decodeURIComponent","pairSplitRegExp","parseCookies","cookiesStr","options","cookies","pairs","split","decodeFn","pair","qeInd","substr","trim","tryDecode","createError","AppletsRequestError","originalRes","cancelToken","execAbort","transformedConfig","throwIfCancellationRequested","formattedUrl","transformMethod","reqHeaders","assign","assembleReqHeaders","withCredentials","Cookies","getCookiesStr","xsrfToken","readCookies","getCookies","formattedGetRequestTaskFunction","_a","autoCookies","writeCookies","reason_1","throwIfRequested","AppletsRequest","chain","unshift","requestWithMethod","requestWithData","miniRequest","to","from","promises","all","createAppletsRequestInstance"],"mappings":"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"}